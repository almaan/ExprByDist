print(viz)
viz <- ggplot(data = exprval, aes(x = distance, y = expr, color = gene)) +
ggtitle('plt_title') +
geom_line() +
geom_errorbar(width = 0.1, aes(ymin = expr-2*sd, ymax =expr + 2*sd)) +
annotate('rect', xmin = -Inf, xmax = 0, ymin = -Inf, ymax = Inf, fill = "red", color = NA, alpha = 0.1) +
annotate('rect', xmin = 0, xmax = Inf, ymin = -Inf, ymax = Inf, fill = "green", color = NA, alpha = 0.1) +
#geom_point()  +
#scale_color_manual(values=cmap) +
xlab('Distance') +
ylab('Relative Expression') +
theme(plot.title = element_text(hjust = 0.5))
print(viz)
viz <- ggplot(data = exprval, aes(x = distance, y = expr, color = gene)) +
ggtitle('plt_title') +
geom_line() +
geom_errorbar(width = 0.1, aes(ymin =  expr - 2*sd, ymax = expr +2*sd)) +
annotate('rect', xmin = -Inf, xmax = 0, ymin = -Inf, ymax = Inf, fill = "red", color = NA, alpha = 0.1) +
annotate('rect', xmin = 0, xmax = Inf, ymin = -Inf, ymax = Inf, fill = "green", color = NA, alpha = 0.1) +
#geom_point()  +
#scale_color_manual(values=cmap) +
xlab('Distance') +
ylab('Relative Expression') +
theme(plot.title = element_text(hjust = 0.5))
print(viz)
viz <- ggplot(data = exprval, aes(x = distance, y = expr, color = gene)) +
ggtitle('plt_title') +
geom_line() +
geom_errorbar(width = 0.1, aes(ymin = -2*sd, ymax = 2*sd, data = expr)) +
annotate('rect', xmin = -Inf, xmax = 0, ymin = -Inf, ymax = Inf, fill = "red", color = NA, alpha = 0.1) +
annotate('rect', xmin = 0, xmax = Inf, ymin = -Inf, ymax = Inf, fill = "green", color = NA, alpha = 0.1) +
#geom_point()  +
#scale_color_manual(values=cmap) +
xlab('Distance') +
ylab('Relative Expression') +
theme(plot.title = element_text(hjust = 0.5))
print(viz)
unigenes <- unique(longformat$gene)
pd <- seq(min(longformat$dist),max(longformat$dist),dr) + dr/2.0
exprval <- data.frame(matrix(0,nrow = length(pd), ncol = length(unigenes)))
sdval <- data.frame(matrix(0,nrow = nrow(exprval), ncol = ncol(exprval)))
colnames(exprval) <- unigenes
colnames(sdval) <- unigenes
rownames(exprval) <- pd
rownames(sdval) <- pd
for (gene in unigenes) {
genpos <- which(longformat$gene == gene)
fit <- gausspr(longformat[genpos,]$dist, longformat[genpos,]$expr, type = 'regression', variance.model = TRUE)
ypred <- predict(fit,pd)
ypredsd <- predict(fit,pd, type = 'sdeviation')
exprval[gene] <-ypred
sdval[gene] <- ypredsd
}
exprval$distance <- pd
sdval$distance <- pd
exprval <- melt(exprval, id = 'distance')
sdval <- melt(sdval, id = 'distance')
exprval[['sd-low']] <- exprval$value - 2*sdval$value
exprval[['sd-high']] <- exprval$value + 2*sdval$value
data <- data[!unlist(lapply(data, is.null))]
longformat <- melt(data, id = 'distance')
colnames(longformat) <- c("distance","gene","expr","section")
unigenes <- unique(longformat$gene)
pd <- seq(min(longformat$dist),max(longformat$dist),dr) + dr/2.0
exprval <- data.frame(matrix(0,nrow = length(pd), ncol = length(unigenes)))
sdval <- data.frame(matrix(0,nrow = nrow(exprval), ncol = ncol(exprval)))
colnames(exprval) <- unigenes
colnames(sdval) <- unigenes
rownames(exprval) <- pd
rownames(sdval) <- pd
for (gene in unigenes) {
genpos <- which(longformat$gene == gene)
fit <- gausspr(longformat[genpos,]$dist, longformat[genpos,]$expr, type = 'regression', variance.model = TRUE)
ypred <- predict(fit,pd)
ypredsd <- predict(fit,pd, type = 'sdeviation')
exprval[gene] <-ypred
sdval[gene] <- ypredsd
}
exprval$distance <- pd
sdval$distance <- pd
exprval <- melt(exprval, id = 'distance')
sdval <- melt(sdval, id = 'distance')
exprval['sd-low'] <- exprval$value - 2*sdval$value
dim(ypred)
dim(ypredsd)
dim(ypredsd)
data <- data[!unlist(lapply(data, is.null))]
longformat <- melt(data, id = 'distance')
colnames(longformat) <- c("distance","gene","expr","section")
unigenes <- unique(longformat$gene)
pd <- seq(min(longformat$dist),max(longformat$dist),dr) + dr/2.0
exprval <- data.frame(matrix(0,nrow = length(pd), ncol = length(unigenes)))
sdval <- data.frame(matrix(0,nrow = nrow(exprval), ncol = ncol(exprval)))
colnames(exprval) <- unigenes
colnames(sdval) <- unigenes
rownames(exprval) <- pd
rownames(sdval) <- pd
for (gene in unigenes) {
genpos <- which(longformat$gene == gene)
fit <- gausspr(longformat[genpos,]$dist, longformat[genpos,]$expr, type = 'regression', variance.model = TRUE)
ypred <- predict(fit,pd)
ypredsd <- predict(fit,pd, type = 'sdeviation')
exprval[gene] <-ypred
sdval[gene] <- ypredsd
}
dim(ypredsd)
ypredsd
length/ypredsd)
length(ypredsd)
dim(sdval)
dim(exprval)
dim(exprval)
sdval[gene] <- ypredsd
data <- data[!unlist(lapply(data, is.null))]
longformat <- melt(data, id = 'distance')
colnames(longformat) <- c("distance","gene","expr","section")
unigenes <- unique(longformat$gene)
pd <- seq(min(longformat$dist),max(longformat$dist),dr) + dr/2.0
exprval <- data.frame(matrix(0,nrow = length(pd), ncol = length(unigenes)))
sdval <- data.frame(matrix(0,nrow = nrow(exprval), ncol = ncol(exprval)))
colnames(exprval) <- unigenes
colnames(sdval) <- unigenes
rownames(exprval) <- pd
rownames(sdval) <- pd
for (gene in unigenes) {
genpos <- which(longformat$gene == gene)
fit <- gausspr(longformat[genpos,]$dist, longformat[genpos,]$expr, type = 'regression', variance.model = TRUE)
ypred <- predict(fit,pd)
ypredsd <- predict(fit,pd, type = 'sdeviation')
exprval[gene] <-ypred
sdval[gene] <- ypredsd
}
exprval$distance <- pd
sdval$distance <- pd
exprval <- melt(exprval, id = 'distance')
sdval <- melt(sdval, id = 'distance')
dim(sdval)
dim(exprval)
exprval['sd-low'] <- exprval$value - 2*sdval$value
dim(exprval)
dim(2*sdval$distance)
length(2*sdval$distance)
length(exprval$value)
length(2*sdval$value)
exprval$value - 2*sdval$value
exprval$value - 2*as.numeric(sdval$value)
as.numeric(exprval$value) - 2*as.numeric(sdval$value)
data <- data[!unlist(lapply(data, is.null))]
longformat <- melt(data, id = 'distance')
colnames(longformat) <- c("distance","gene","expr","section")
unigenes <- unique(longformat$gene)
pd <- seq(min(longformat$dist),max(longformat$dist),dr) + dr/2.0
exprval <- data.frame(matrix(0,nrow = length(pd), ncol = length(unigenes)))
sdval <- data.frame(matrix(0,nrow = nrow(exprval), ncol = ncol(exprval)))
colnames(exprval) <- unigenes
colnames(sdval) <- unigenes
rownames(exprval) <- pd
rownames(sdval) <- pd
for (gene in unigenes) {
genpos <- which(longformat$gene == gene)
fit <- gausspr(longformat[genpos,]$dist, longformat[genpos,]$expr, type = 'regression', variance.model = TRUE)
ypred <- predict(fit,pd)
ypredsd <- predict(fit,pd, type = 'sdeviation')
exprval[gene] <-ypred
sdval[gene] <- ypredsd
}
exprval$distance <- pd
sdval$distance <- pd
exprval <- melt(exprval, id = 'distance')
sdval <- melt(sdval, id = 'distance')
exprval['sd-low'] <- as.numeric(exprval$value) - as.numeric(2*sdval$value)
exprval['sd-high'] <- as.numeric(exprval$value) - as.numeric(2*sdval$value)
colnames(exprval) <- c('distance','gene','expr','sd')
viz <- ggplot(data = exprval, aes(x = distance, y = expr, color = gene)) +
ggtitle('plt_title') +
geom_line() +
geom_errorbar(width = 0.1, aes(ymin = -2*sd, ymax = 2*sd, data = expr)) +
annotate('rect', xmin = -Inf, xmax = 0, ymin = -Inf, ymax = Inf, fill = "red", color = NA, alpha = 0.1) +
annotate('rect', xmin = 0, xmax = Inf, ymin = -Inf, ymax = Inf, fill = "green", color = NA, alpha = 0.1) +
#geom_point()  +
#scale_color_manual(values=cmap) +
xlab('Distance') +
ylab('Relative Expression') +
theme(plot.title = element_text(hjust = 0.5))
data <- data[!unlist(lapply(data, is.null))]
longformat <- melt(data, id = 'distance')
colnames(longformat) <- c("distance","gene","expr","section")
unigenes <- unique(longformat$gene)
pd <- seq(min(longformat$dist),max(longformat$dist),dr) + dr/2.0
exprval <- data.frame(matrix(0,nrow = length(pd), ncol = length(unigenes)))
sdval <- data.frame(matrix(0,nrow = nrow(exprval), ncol = ncol(exprval)))
colnames(exprval) <- unigenes
colnames(sdval) <- unigenes
rownames(exprval) <- pd
rownames(sdval) <- pd
for (gene in unigenes) {
genpos <- which(longformat$gene == gene)
fit <- gausspr(longformat[genpos,]$dist, longformat[genpos,]$expr, type = 'regression', variance.model = TRUE)
ypred <- predict(fit,pd)
ypredsd <- predict(fit,pd, type = 'sdeviation')
exprval[gene] <-ypred
sdval[gene] <- ypredsd
}
exprval$distance <- pd
sdval$distance <- pd
exprval <- melt(exprval, id = 'distance')
sdval <- melt(sdval, id = 'distance')
exprval['sd-low'] <- as.numeric(exprval$value) - as.numeric(2*sdval$value)
exprval['sd-high'] <- as.numeric(exprval$value) - as.numeric(2*sdval$value)
colnames(exprval) <- c('distance','gene','expr','sd')
viz <- ggplot(data = exprval, aes(x = distance, y = expr, color = gene)) +
ggtitle('plt_title') +
geom_line() +
geom_errorbar(width = 0.1, aes(ymin = sd_low, ymax = sd_high)) +
annotate('rect', xmin = -Inf, xmax = 0, ymin = -Inf, ymax = Inf, fill = "red", color = NA, alpha = 0.1) +
annotate('rect', xmin = 0, xmax = Inf, ymin = -Inf, ymax = Inf, fill = "green", color = NA, alpha = 0.1) +
#geom_point()  +
#scale_color_manual(values=cmap) +
xlab('Distance') +
ylab('Relative Expression') +
theme(plot.title = element_text(hjust = 0.5))
print(viz)
data <- data[!unlist(lapply(data, is.null))]
longformat <- melt(data, id = 'distance')
colnames(longformat) <- c("distance","gene","expr","section")
unigenes <- unique(longformat$gene)
pd <- seq(min(longformat$dist),max(longformat$dist),dr) + dr/2.0
exprval <- data.frame(matrix(0,nrow = length(pd), ncol = length(unigenes)))
sdval <- data.frame(matrix(0,nrow = nrow(exprval), ncol = ncol(exprval)))
colnames(exprval) <- unigenes
colnames(sdval) <- unigenes
rownames(exprval) <- pd
rownames(sdval) <- pd
for (gene in unigenes) {
genpos <- which(longformat$gene == gene)
fit <- gausspr(longformat[genpos,]$dist, longformat[genpos,]$expr, type = 'regression', variance.model = TRUE)
ypred <- predict(fit,pd)
ypredsd <- predict(fit,pd, type = 'sdeviation')
exprval[gene] <-ypred
sdval[gene] <- ypredsd
}
exprval$distance <- pd
sdval$distance <- pd
exprval <- melt(exprval, id = 'distance')
sdval <- melt(sdval, id = 'distance')
exprval['sd_low'] <- as.numeric(exprval$value) - as.numeric(2*sdval$value)
exprval['sd_high'] <- as.numeric(exprval$value) - as.numeric(2*sdval$value)
colnames(exprval) <- c('distance','gene','expr','sd')
viz <- ggplot(data = exprval, aes(x = distance, y = expr, color = gene)) +
ggtitle('plt_title') +
geom_line() +
geom_errorbar(width = 0.1, aes(ymin = sd_low, ymax = sd_high)) +
annotate('rect', xmin = -Inf, xmax = 0, ymin = -Inf, ymax = Inf, fill = "red", color = NA, alpha = 0.1) +
annotate('rect', xmin = 0, xmax = Inf, ymin = -Inf, ymax = Inf, fill = "green", color = NA, alpha = 0.1) +
#geom_point()  +
#scale_color_manual(values=cmap) +
xlab('Distance') +
ylab('Relative Expression') +
theme(plot.title = element_text(hjust = 0.5))
print(viz)
head(exprval)
data <- data[!unlist(lapply(data, is.null))]
longformat <- melt(data, id = 'distance')
colnames(longformat) <- c("distance","gene","expr","section")
unigenes <- unique(longformat$gene)
pd <- seq(min(longformat$dist),max(longformat$dist),dr) + dr/2.0
exprval <- data.frame(matrix(0,nrow = length(pd), ncol = length(unigenes)))
sdval <- data.frame(matrix(0,nrow = nrow(exprval), ncol = ncol(exprval)))
colnames(exprval) <- unigenes
colnames(sdval) <- unigenes
rownames(exprval) <- pd
rownames(sdval) <- pd
for (gene in unigenes) {
genpos <- which(longformat$gene == gene)
fit <- gausspr(longformat[genpos,]$dist, longformat[genpos,]$expr, type = 'regression', variance.model = TRUE)
ypred <- predict(fit,pd)
ypredsd <- predict(fit,pd, type = 'sdeviation')
exprval[gene] <-ypred
sdval[gene] <- ypredsd
}
exprval$distance <- pd
sdval$distance <- pd
exprval <- melt(exprval, id = 'distance')
sdval <- melt(sdval, id = 'distance')
exprval['sdlow'] <- as.numeric(exprval$value) - as.numeric(2*sdval$value)
exprval['sdhigh'] <- as.numeric(exprval$value) + as.numeric(2*sdval$value)
colnames(exprval) <- c('distance','gene','expr','sd')
data <- data[!unlist(lapply(data, is.null))]
longformat <- melt(data, id = 'distance')
colnames(longformat) <- c("distance","gene","expr","section")
unigenes <- unique(longformat$gene)
pd <- seq(min(longformat$dist),max(longformat$dist),dr) + dr/2.0
exprval <- data.frame(matrix(0,nrow = length(pd), ncol = length(unigenes)))
sdval <- data.frame(matrix(0,nrow = nrow(exprval), ncol = ncol(exprval)))
colnames(exprval) <- unigenes
colnames(sdval) <- unigenes
rownames(exprval) <- pd
rownames(sdval) <- pd
for (gene in unigenes) {
genpos <- which(longformat$gene == gene)
fit <- gausspr(longformat[genpos,]$dist, longformat[genpos,]$expr, type = 'regression', variance.model = TRUE)
ypred <- predict(fit,pd)
ypredsd <- predict(fit,pd, type = 'sdeviation')
exprval[gene] <-ypred
sdval[gene] <- ypredsd
}
exprval$distance <- pd
sdval$distance <- pd
exprval <- melt(exprval, id = 'distance')
sdval <- melt(sdval, id = 'distance')
exprval['sd_low'] <- as.numeric(exprval$value) - as.numeric(2*sdval$value)
exprval['sd_high'] <- as.numeric(exprval$value) + as.numeric(2*sdval$value)
colnames(exprval) <- c('distance','gene','expr','sd_low','sd_high')
viz <- ggplot(data = exprval, aes(x = distance, y = expr, color = gene)) +
ggtitle('plt_title') +
geom_line() +
geom_errorbar(width = 0.1, aes(ymin = sd_low, ymax = sd_high)) +
annotate('rect', xmin = -Inf, xmax = 0, ymin = -Inf, ymax = Inf, fill = "red", color = NA, alpha = 0.1) +
annotate('rect', xmin = 0, xmax = Inf, ymin = -Inf, ymax = Inf, fill = "green", color = NA, alpha = 0.1) +
#geom_point()  +
#scale_color_manual(values=cmap) +
xlab('Distance') +
ylab('Relative Expression') +
theme(plot.title = element_text(hjust = 0.5))
print(viz)
viz <- ggplot(data = exprval, aes(x = distance, y = expr, color = gene)) +
ggtitle('plt_title') +
geom_line() +
geom_errorbar(width = 0.1, aes(ymin = sd_low, ymax = sd_high)) +
annotate('rect', xmin = -Inf, xmax = 0, ymin = -Inf, ymax = Inf, fill = "red", color = NA, alpha = 0.1) +
annotate('rect', xmin = 0, xmax = Inf, ymin = -Inf, ymax = Inf, fill = "green", color = NA, alpha = 0.1) +
geom_point()  +
#scale_color_manual(values=cmap) +
xlab('Distance') +
ylab('Relative Expression') +
theme(plot.title = element_text(hjust = 0.5))
print(viz)
viz <- ggplot(data = exprval, aes(x = distance, y = expr, color = gene)) +
ggtitle('plt_title') +
geom_line() +
geom_errorbar(width = 0.1, aes(ymin = sd_low, ymax = sd_high)) +
annotate('rect', xmin = -Inf, xmax = 0, ymin = -Inf, ymax = Inf, fill = "red", color = NA, alpha = 0.1) +
annotate('rect', xmin = 0, xmax = Inf, ymin = -Inf, ymax = Inf, fill = "green", color = NA, alpha = 0.1) +
geom_point(x = longformat$distance, y = longformat$expr)  +
#scale_color_manual(values=cmap) +
xlab('Distance') +
ylab('Relative Expression') +
theme(plot.title = element_text(hjust = 0.5))
print(viz)
viz <- ggplot(data = exprval, aes(x = distance, y = expr, color = gene)) +
ggtitle('plt_title') +
geom_line() +
geom_errorbar(width = 0.1, aes(ymin = sd_low, ymax = sd_high)) +
annotate('rect', xmin = -Inf, xmax = 0, ymin = -Inf, ymax = Inf, fill = "red", color = NA, alpha = 0.1) +
annotate('rect', xmin = 0, xmax = Inf, ymin = -Inf, ymax = Inf, fill = "green", color = NA, alpha = 0.1) +
#geom_point(x = longformat$distance, y = longformat$expr)  +
#scale_color_manual(values=cmap) +
xlab('Distance') +
ylab('Relative Expression') +
theme(plot.title = element_text(hjust = 0.5))
print(viz)
?predict
data <- data[!unlist(lapply(data, is.null))]
longformat <- melt(data, id = 'distance')
colnames(longformat) <- c("distance","gene","expr","section")
unigenes <- unique(longformat$gene)
pd <- seq(min(longformat$dist),max(longformat$dist),dr) + dr/2.0
exprval <- data.frame(matrix(0,nrow = length(pd), ncol = length(unigenes)))
errval <- data.frame(matrix(0,nrow = nrow(exprval), ncol = ncol(exprval)))
colnames(exprval) <- unigenes
colnames(sdval) <- unigenes
rownames(exprval) <- pd
rownames(sdval) <- pd
for (gene in unigenes) {
genpos <- which(longformat$gene == gene)
fit <- gausspr(longformat[genpos,]$dist, longformat[genpos,]$expr, type = 'regression', variance.model = TRUE)
ypred <- predict(fit,pd)
ypredsd <- predict(fit,pd, type = 'sdeviation')
exprval[gene] <-ypred
errval[gene] <- 1.96*ypredsd / sqrt(length(genpos))
}
data <- data[!unlist(lapply(data, is.null))]
longformat <- melt(data, id = 'distance')
colnames(longformat) <- c("distance","gene","expr","section")
unigenes <- unique(longformat$gene)
pd <- seq(min(longformat$dist),max(longformat$dist),dr) + dr/2.0
exprval <- data.frame(matrix(0,nrow = length(pd), ncol = length(unigenes)))
errval <- data.frame(matrix(0,nrow = nrow(exprval), ncol = ncol(exprval)))
colnames(exprval) <- unigenes
colnames(sdval) <- unigenes
rownames(exprval) <- pd
rownames(sdval) <- pd
for (gene in unigenes) {
genpos <- which(longformat$gene == gene)
fit <- gausspr(longformat[genpos,]$dist, longformat[genpos,]$expr, type = 'regression', variance.model = TRUE)
ypred <- predict(fit,pd)
ypredsd <- predict(fit,pd, type = 'sdeviation')
exprval[gene] <-ypred
errval[gene] <- 1.96*ypredsd / sqrt(length(genpos))
}
data <- data[!unlist(lapply(data, is.null))]
longformat <- melt(data, id = 'distance')
colnames(longformat) <- c("distance","gene","expr","section")
unigenes <- unique(longformat$gene)
pd <- seq(min(longformat$dist),max(longformat$dist),dr) + dr/2.0
exprval <- data.frame(matrix(0,nrow = length(pd), ncol = length(unigenes)))
errval <- data.frame(matrix(0,nrow = nrow(exprval), ncol = ncol(exprval)))
colnames(exprval) <- unigenes
colnames(errval) <- unigenes
rownames(exprval) <- pd
rownames(errval) <- pd
for (gene in unigenes) {
genpos <- which(longformat$gene == gene)
fit <- gausspr(longformat[genpos,]$dist, longformat[genpos,]$expr, type = 'regression', variance.model = TRUE)
ypred <- predict(fit,pd)
ypredsd <- predict(fit,pd, type = 'sdeviation')
exprval[gene] <-ypred
errval[gene] <- 1.96*ypredsd / sqrt(length(genpos))
}
exprval$distance <- pd
errval$distance <- pd
exprval <- melt(exprval, id = 'distance')
errval <- melt(sdval, id = 'distance')
exprval$distance <- pd
errval$distance <- pd
exprval <- melt(exprval, id = 'distance')
errval <- melt(errval, id = 'distance')
data <- data[!unlist(lapply(data, is.null))]
longformat <- melt(data, id = 'distance')
colnames(longformat) <- c("distance","gene","expr","section")
unigenes <- unique(longformat$gene)
pd <- seq(min(longformat$dist),max(longformat$dist),dr) + dr/2.0
exprval <- data.frame(matrix(0,nrow = length(pd), ncol = length(unigenes)))
errval <- data.frame(matrix(0,nrow = nrow(exprval), ncol = ncol(exprval)))
colnames(exprval) <- unigenes
colnames(errval) <- unigenes
rownames(exprval) <- pd
rownames(errval) <- pd
for (gene in unigenes) {
genpos <- which(longformat$gene == gene)
fit <- gausspr(longformat[genpos,]$dist, longformat[genpos,]$expr, type = 'regression', variance.model = TRUE)
ypred <- predict(fit,pd)
ypredsd <- predict(fit,pd, type = 'sdeviation')
exprval[gene] <-ypred
errval[gene] <- 1.96*ypredsd / sqrt(length(genpos))
}
exprval$distance <- pd
errval$distance <- pd
exprval <- melt(exprval, id = 'distance')
errval <- melt(errval, id = 'distance')
exprval['ci_low'] <- as.numeric(exprval$value) - as.numeric(errval$value)
exprval['ci_high'] <- as.numeric(exprval$value) + as.numeric(errval$value)
colnames(exprval) <- c('distance','gene','expr','ci_low','ci_high')
viz <- ggplot(data = exprval, aes(x = distance, y = expr, color = gene)) +
ggtitle('plt_title') +
geom_line() +
geom_errorbar(width = 0.1, aes(ymin = ci_low, ymax = ci_high)) +
annotate('rect', xmin = -Inf, xmax = 0, ymin = -Inf, ymax = Inf, fill = "red", color = NA, alpha = 0.1) +
annotate('rect', xmin = 0, xmax = Inf, ymin = -Inf, ymax = Inf, fill = "green", color = NA, alpha = 0.1) +
#geom_point(x = longformat$distance, y = longformat$expr)  +
#scale_color_manual(values=cmap) +
xlab('Distance') +
ylab('Relative Expression') +
theme(plot.title = element_text(hjust = 0.5))
print(viz)
source('~/ST-2018/CNNp/ExprByDist/main.r', echo=TRUE)
viz <- ggplot(data = exprval, aes(x = distance, y = expr, color = gene)) +
ggtitle('plt_title') +
geom_line() +
geom_errorbar(width = 0.1, aes(ymin = ci_low, ymax = ci_high)) +
annotate('rect', xmin = -Inf, xmax = 0, ymin = -Inf, ymax = Inf, fill = "red", color = NA, alpha = 0.1) +
annotate('rect', xmin = 0, xmax = Inf, ymin = -Inf, ymax = Inf, fill = "green", color = NA, alpha = 0.1) +
#geom_point(x = longformat$distance, y = longformat$expr)  +
scale_color_manual(values=cmap) +
xlab('Distance') +
ylab('Relative Expression') +
theme(plot.title = element_text(hjust = 0.5))
print(viz)
viz <- ggplot(data = exprval, aes(x = distance, y = expr, color = gene)) +
ggtitle('plt_title') +
geom_line() +
geom_errorbar(width = 0.1, aes(ymin = ci_low, ymax = ci_high), alpha = 0.3) +
annotate('rect', xmin = -Inf, xmax = 0, ymin = -Inf, ymax = Inf, fill = "red", color = NA, alpha = 0.1) +
annotate('rect', xmin = 0, xmax = Inf, ymin = -Inf, ymax = Inf, fill = "green", color = NA, alpha = 0.1) +
scale_color_manual(values=cmap) +
xlab('Distance') +
ylab('Relative Expression') +
theme(plot.title = element_text(hjust = 0.5))
print(viz)
source('~/ST-2018/CNNp/ExprByDist/main.r', echo=TRUE)
str(fit)
?predict
ypredsd <- predict(fit,pd, type = 'confidence')
?gausspr
source('~/ST-2018/CNNp/ExprByDist/main.r', echo=TRUE)
?prop.table
f <- rep(rnorm(4),3)
f
f <- replicate(rnorm(4),3)
f <- replicate(3,rnorm)
f
f <- replicate(3,rnorm(4))
f
sweep(f, margin = 1, FUN = '+', c(1,2,3))
sweep(f, MARGIN = 1, FUN = '+', c(1,2,3))
a <- sweep(f, MARGIN = 1, FUN = '+', c(1,2,3))
a <- sweep(f, MARGIN = 1, FUN = '+', c(1,2,3,4))
a
af
f
source('~/ST-2018/CNNp/ExprByDist/main.r', echo=TRUE)
source('~/ST-2018/CNNp/ExprByDist/main.r', echo=TRUE)
